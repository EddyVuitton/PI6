@page "/home"

<CascadingAuthenticationState>
    <div class="d-flex flex-column align-center justify-center">
        <div style="margin: 1%; width: 90%">
            <AdvCarousel />
        </div>
    </div>
    <div class="d-flex flex-column align-center justify-center">
        <div style="margin: 1%; width: 90%">
            <AuthorizeView Roles=@_otherRoles>
                <Authorized>
                    <div style="width: 400px;" class="d-flex flex-row align-start">
                        <MudPaper Elevation="0">
                            <MudButton Size="Size.Medium"
                                       Variant="Variant.Filled"
                                       Color="Color.Primary"
                                       Href="/newquiz"
                                       Style="text-transform:none; font-size: 20px">
                                Nowy test
                            </MudButton>
                        </MudPaper>
                    </div>
                    <br />
                    <MudText Align="Align.Left" Typo="Typo.h3">Stworzone testy</MudText>
                    <br />
                    <div class="d-flex justify-start flex-grow-1 flex-wrap gap-y-4 gap-x-4" style="width: 70%;">
                        @if (_formTiles is null)
                        {
                            <MudText>
                                Ładowanie formularzy...
                            </MudText>
                        }
                        else
                        {
                            <FormTilesIndex FormTiles="@_formTiles" Account="@_accountDto" />
                        }
                    </div>
                </Authorized>
            </AuthorizeView>
            <AuthorizeView Roles=@_studentRole>
                <Authorized>
                    <div class="d-flex justify-start flex-grow-1 flex-wrap gap-y-4 gap-x-4" style="width: 70%;">
                        @if (_formTiles is null)
                        {
                            <MudText>
                                Ładowanie formularzy...
                            </MudText>
                        }
                        else
                        {
                            <div class="d-flex flex-column gap-y-8">
                                @if (_activeFormTiles.Count > 0)
                                {
                                    <div>
                                        <MudText Align="Align.Left" Typo="Typo.h3">Aktywne testy do rozwiązania</MudText>
                                        <FormTilesIndex FormTiles="@_activeFormTiles" Account="@_accountDto" />
                                    </div>
                                }

                                @if (_deactiveFormTiles.Count > 0)
                                {
                                    <div>
                                        <MudText Align="Align.Left" Typo="Typo.h3">Zamknięte testy</MudText>
                                        <FormTilesIndex FormTiles="@_deactiveFormTiles" Account="@_accountDto" />
                                    </div>
                                }

                                @if (_solvedForms.Count > 0)
                                {
                                    <div>
                                        <MudText Align="Align.Left" Typo="Typo.h3">Rozwiązane testy</MudText>
                                        @foreach (var f in _solvedForms)
                                        {
                                            try
                                            {
                                                var tempHref = $"/formdetails/{f.fpod_for_id}";
                                                var tempEndDate = f.fpod_data_zakonczenia.HasValue == true ? f.fpod_data_zakonczenia.Value.Date.ToShortDateString() : "Nie określono";
                                                var tempTile = _formTiles.First(x => x.ForId == f.fpod_for_id);
                                                var tempForm = _forms.Where(x => x.for_id == tempTile.ForId).First();
                                                var tempDateFrom = f.fpod_data_rozpoczenia.ToString("dd/MM/yyyy HH:mm");
                                                var tempDateTo = f.fpod_data_zakonczenia?.ToString("dd/MM/yyyy HH:mm");
                                                var tempPointsSum = _formsPointsSum.Where(x => x.Key == tempForm).First().Value;
                                                var tempUserPointsSum = _formsUserPointsSum.Where(x => x.Key == tempForm).First().Value;

                                                <MudPaper Elevation="10" Style="width: 300px;">
                                                    <MudLink Href="@tempHref">
                                                        <div class="d-flex flex-column justify-start">
                                                            <div class="d-flex justify-start flex-column flex-grow-1" style="margin: 1% 1% 2% 1%; background-color: inherit;">
                                                                <MudText Style="color: black; font-weight: bold;">@tempTile.Nazwa</MudText>
                                                                <MudText Style="color: black;">Rozpoczęto: @tempDateFrom</MudText>
                                                                <MudText Style="color: black;">Zakończono: @tempDateTo</MudText>
                                                                <MudText Style="color: black;">Punkty: @tempUserPointsSum/@tempPointsSum</MudText>
                                                            </div>
                                                        </div>
                                                    </MudLink>
                                                </MudPaper>
                                            }
                                            catch (Exception e)
                                            {
                                                ErrorHelper.ShowSnackbar(e.Message, Severity.Error, false, true);
                                            }
                                        }
                                    </div>
                                }
                            </div>
                        }
                    </div>
                </Authorized>
            </AuthorizeView>
        </div>
    </div>
</CascadingAuthenticationState>